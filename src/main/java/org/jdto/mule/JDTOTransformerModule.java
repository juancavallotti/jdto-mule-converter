/**
 * This file was automatically generated by the Mule Development Kit
 */
package org.jdto.mule;

import java.util.Collection;
import java.util.List;
import org.jdto.DTOBinder;
import org.jdto.impl.BeanClassUtils;
import org.mule.api.annotations.Module;
import org.mule.api.annotations.Processor;
import org.mule.api.annotations.param.Payload;

/**
 * Module
 *
 * @author MuleSoft, Inc.
 */
@Module(name = "jdto", schemaVersion = "1.0-SNAPSHOT")
public class JDTOTransformerModule {
    
    
    /**
     * Convert The payload by copying the data to the target class using a JDTO Binder Mapping.
     * 
     * {@sample.xml ../../../doc/sample.xml.sample jdto:bind}
     * 
     * @param source the source object to be converted.
     * @param targetClass the target class of the DTO.
     * @param dtoBinder the Binder used to transform objects.
     * @return A new instance of the target class with its field populated according to the mapping.
     */
    @Processor
    public Object bind(@Payload Object source, String targetClass, DTOBinder dtoBinder) {
        
        Class cls = BeanClassUtils.safeGetClass(targetClass);
        
        if (cls == null) {
            throw new IllegalArgumentException("Cannot find class: "+targetClass);
        }
        
        if (source instanceof List) {
            return dtoBinder.bindFromBusinessObjectList(cls, (List) source);
        }
        
        
        if (source instanceof Collection) {
            return dtoBinder.bindFromBusinessObjectCollection(cls, (Collection) source);
        }
        
        return dtoBinder.bindFromBusinessObject(cls, source);
    }

}
